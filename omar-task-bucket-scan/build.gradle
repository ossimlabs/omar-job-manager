buildscript {
	ext {
		springBootVersion = '1.5.17.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath( "org.springframework.boot:spring-boot-gradle-plugin:${ springBootVersion }" )
	}
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'

group = 'omar-job-manager'
version = versionNumber
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudTaskVersion = '1.2.3.RELEASE'
}

publish {
	dependsOn assemble
}

clean.doFirst {
        file("../omar-task-launcher/docker/.m2/repository").deleteDir()
}

publishing {
	publications {
		bootJava( MavenPublication ) {
			artifact( file( "${ buildDir }/libs/${ project.name }-${ project.version }.jar" ) )
		}
	}
	repositories {
                maven {
                    name 'dockerBucketRepo'
                    url uri('../omar-task-launcher/docker/.m2/repository')
                }
		maven {
			credentials {
				username System.getenv( 'MAVEN_REPOSITORY_USERNAME' )
				password System.getenv( 'MAVEN_REPOSITORY_PASSWORD' )
			}
			url = "${ System.getenv( 'MAVEN_REPO_URL' ) }/omar-local-snapshot"
		}
	}
}

dependencies {
	compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.443'
	
	
	compile( 'org.springframework.boot:spring-boot-starter-jdbc' )
	compile( 'org.springframework.cloud:spring-cloud-starter-task' )
	compile( 'org.springframework.cloud:spring-cloud-starter-config' )
//	compile('org.springframework.cloud:spring-cloud-starter-aws')
	compile( 'org.codehaus.groovy:groovy' )
	runtime( 'org.postgresql:postgresql' )
	testCompile( 'org.springframework.boot:spring-boot-starter-test' )
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Edgware.SR5'
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependencyV}"
		applyMavenExclusions false
	}
}
